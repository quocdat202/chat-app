{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState, useEffect } from 'react';\nimport { db } from \"../Firebase\";\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport nullAvatar from \"../Images/null-avatar.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Friend(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      friend = _useState2[0],\n      setFriend = _useState2[1];\n\n  var _useState3 = useState(props.messages),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _idUser = props._idUser;\n  var userRef = collection(db, \"users\");\n  var messagesRef = collection(db, \"messages\");\n  useEffect(function _callee() {\n    var q, querySnapshot;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            q = query(userRef, where(\"_id\", \"==\", props._id));\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDocs(q));\n\n          case 3:\n            querySnapshot = _context.sent;\n\n            if (querySnapshot.docs.length > 0) {\n              setFriend(querySnapshot.docs[0].data());\n            } else {\n              console.log(\"Get Friend failed\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  useEffect(function _callee2() {\n    var q, querySnapshot, arrayMessages;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            q = query(messagesRef, where(\"idRoom\", \"==\", props.idRoom));\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getDocs(q));\n\n          case 3:\n            querySnapshot = _context2.sent;\n\n            if (querySnapshot.docs.length > 0) {\n              arrayMessages = [];\n              querySnapshot.docs.forEach(function (doc) {\n                arrayMessages.push({\n                  _id: doc.data()._id,\n                  createdAt: doc.data().createdAt.toDate(),\n                  text: doc.data().text,\n                  idRoom: doc.data().idRoom,\n                  user: doc.data().user\n                });\n              });\n              arrayMessages.sort(function (a, b) {\n                return b.createdAt - a.createdAt;\n              });\n              setMessages(arrayMessages);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [props.messages]);\n  return _jsxs(Pressable, {\n    style: styles.friend,\n    onPress: function onPress() {\n      return props.navigation.navigate('Chat', {\n        idRoom: props.idRoom,\n        user: props.user,\n        navigation: props.navigation\n      });\n    },\n    children: [_jsx(Image, {\n      style: styles.avatarFriend,\n      source: nullAvatar\n    }), _jsxs(View, {\n      style: {\n        justifyContent: 'center',\n        flex: 1\n      },\n      children: [_jsxs(View, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginLeft: 7,\n            fontWeight: \"700\"\n          },\n          children: friend ? friend.name + \" \" : ''\n        }), _jsx(Text, {\n          style: {\n            fontWeight: \"300\",\n            fontStyle: \"italic\"\n          },\n          children: friend ? '(' + friend._id + ')' : \"\"\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          marginLeft: 7,\n          marginTop: 7\n        },\n        children: [friend ? messages[0].user._id === _idUser ? _jsx(Text, {\n          children: \"B\\u1EA1n: \"\n        }) : _jsx(Text, {\n          children: friend.name + \": \"\n        }) : null, messages.length > 0 ? _jsx(Text, {\n          children: messages[0].text\n        }) : null]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  friend: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 0.5,\n    borderColor: '#D0D0D0'\n  },\n  avatarFriend: {\n    height: 50,\n    width: 50,\n    borderRadius: 50\n  }\n});","map":{"version":3,"sources":["D:/Đồ án web/chat-app/Components/Friend.js"],"names":["React","useState","useEffect","db","collection","getDocs","query","where","nullAvatar","Friend","props","friend","setFriend","messages","setMessages","_idUser","userRef","messagesRef","q","_id","querySnapshot","docs","length","data","console","log","idRoom","arrayMessages","forEach","doc","push","createdAt","toDate","text","user","sort","a","b","styles","navigation","navigate","avatarFriend","justifyContent","flex","display","flexDirection","marginLeft","fontWeight","name","fontStyle","marginTop","StyleSheet","create","width","alignItems","padding","borderBottomWidth","borderColor","height","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View , Text ,StyleSheet , Image ,Pressable} from 'react-native'\r\nimport {useState , useEffect} from 'react'\r\nimport { db } from '../Firebase' \r\nimport { collection , getDocs , query ,where } from 'firebase/firestore';\r\nimport nullAvatar from '../Images/null-avatar.png'\r\n\r\nexport default function Friend(props){\r\n    const [friend, setFriend] = useState(null);\r\n    const [messages, setMessages] = useState(props.messages);\r\n    const _idUser = props._idUser;\r\n\r\n    const userRef = collection(db , \"users\");\r\n    const messagesRef = collection(db , \"messages\");\r\n    useEffect( async () => {\r\n        const q = query(userRef, where(\"_id\",\"==\",props._id));\r\n        const querySnapshot = await getDocs(q);\r\n        if(querySnapshot.docs.length > 0) {\r\n            setFriend(querySnapshot.docs[0].data());\r\n        }else{\r\n          console.log(\"Get Friend failed\");\r\n        }\r\n    }, [])\r\n    useEffect(async () => {\r\n        const q = query(messagesRef , where(\"idRoom\",\"==\" ,props.idRoom))\r\n        const querySnapshot = await getDocs(q);\r\n        if(querySnapshot.docs.length > 0){\r\n            var arrayMessages = [];\r\n            querySnapshot.docs.forEach((doc)=>{\r\n                arrayMessages.push({\r\n                    _id : doc.data()._id,\r\n                    createdAt : doc.data().createdAt.toDate(),\r\n                    text : doc.data().text,\r\n                    idRoom : doc.data().idRoom,\r\n                    user : doc.data().user\r\n                });\r\n            })\r\n            arrayMessages.sort((a,b) => b.createdAt - a.createdAt);\r\n            setMessages(arrayMessages);\r\n        }\r\n    }, [props.messages])\r\n  return(\r\n    <Pressable style={styles.friend} onPress={()=>props.navigation.navigate('Chat', {idRoom : props.idRoom , user : props.user , navigation : props.navigation } )}>\r\n        <Image style={styles.avatarFriend} source={nullAvatar}/>\r\n        <View style={{ justifyContent : 'center' , flex : 1}}>\r\n            <View style={{display:'flex', flexDirection:'row'}}>\r\n                <Text style={{ marginLeft : 7 , fontWeight : \"700\" }}>{friend ? friend.name + \" \" : ''}</Text>\r\n                <Text style={{fontWeight:\"300\", fontStyle:\"italic\"}}>{friend?'('+ friend._id + ')' : \"\"}</Text>\r\n            </View>\r\n                <View style={{flexDirection : 'row' , marginLeft : 7 , marginTop : 7}}>\r\n                    {friend ? messages[0].user._id === _idUser ? <Text>Bạn: </Text> : <Text>{friend.name+\": \"}</Text> : null}\r\n                    {messages.length > 0 ? <Text>{messages[0].text}</Text> : null}\r\n                </View>\r\n        </View>\r\n    </Pressable>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n    friend : {\r\n        width : '100%',\r\n        flexDirection : 'row',\r\n        alignItems : 'center',\r\n        padding : 10,\r\n        borderBottomWidth : 0.5 ,\r\n        borderColor : '#D0D0D0'\r\n    },\r\n    avatarFriend : {\r\n        height : 50,\r\n        width : 50 ,\r\n        borderRadius : 50\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}